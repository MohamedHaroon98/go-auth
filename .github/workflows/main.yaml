name: Build Image & Deploy
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ECR_REGISTRY: '${{ secrets.ECR_REGISTRY }}'
  IMAGE_NAME: "go-auth"
  IMAGE_TAG: "latest"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Install AWS CLI + HELM
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh
          chmod 700 get_helm.sh
          ./get_helm.sh


      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Build Image
        run: |
          docker build -t $IMAGE_NAME .


      - name: Push Image to ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/$ECR_REGISTRY
          docker tag $IMAGE_NAME:$IMAGE_TAG public.ecr.aws/$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
          docker push public.ecr.aws/$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
      
      - name: Scan image
        uses: anchore/scan-action@v3
        with:
          image: public.ecr.aws/${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          fail-build: false # Not recommended for PROD
      

      - name: Set up KUBECONFIG
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBECONFIG_SECRET" > $HOME/.kube/config
        env:
          KUBECONFIG_SECRET: ${{ secrets.KUBECONFIG }}

      - name: Deploy App
        run: |
          helm upgrade -i go-auth ./.helm -n go-auth

      - name: Deploy Prometheus
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm upgrade -i -n go-auth prometheus prometheus-community/prometheus -f ./.helm/charts/monitoring/values.yaml
